/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.55
 * Generated at: 2023-12-13 08:06:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class boardList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/include/gym_footer.jsp", Long.valueOf(1702261267768L));
    _jspx_dependants.put("/include/gym_header.jsp", Long.valueOf(1702429024391L));
    _jspx_dependants.put("/common/bootstrap_common.jsp", Long.valueOf(1702261267661L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write(" ");
 
	List<Map<String, Object>> bList = (List)request.getAttribute("bList"); 
 	int size = 0;//총 레코드 수
 	if(bList != null){
 		size = bList.size(); //4 출력
 	}
 	//out.print(bList);
 
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>게시판(webapp)</title>\r\n");
      out.write("<!--  \r\n");
      out.write("WAS란?\r\n");
      out.write("TOMCAT(웹서버{apache사용함 : 정적페이지}+웹컨테이너 - jsp : api.jar - 서블릿 변환, servlet : api.jar - 컴파일)\r\n");
      out.write("\r\n");
      out.write("1) 액션태그 : a_jsp.java, b_jsp.java\r\n");
      out.write(": 파일이 두 개로 생성됨. 처리 결과가 a.jsp에 반영됨. 제어권은 a.jsp에게 있다\r\n");
      out.write(": 주소가 바뀌지 않는다(a->b->a로 다시 돌아오기 때문이다). 요청이 계속 유지되는 것으로 판단함\r\n");
      out.write("2) include directive 방식 : a_jsp.java - jsp파일은 두 갠데 서블릿은 한 개다\r\n");
      out.write("역할\r\n");
      out.write(": 인증에 관련된 코드는 서비스 개시 거의 직전에 추가함\r\n");
      out.write(": 보통 보안과 관련된 업체는 별도로 선정하고 요구사항을 수렴하는 시스템이어야 함\r\n");
      out.write("-->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"> \r\n");
      out.write("<script src=\"	https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>");
      out.write("\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"/css/board.css\">\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		function boardList(){\r\n");
      out.write("			location.href=\"/board/boardList.gd2\"\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- header start -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-expand-sm bg-light navbar-light\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"\">여기내GYM</a>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">로그인</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("        <!-- \r\n");
      out.write("        확장자가 jsp이면 서블릿을 경유하지 않는다. - 목록에 보여줄 데이터가 없다?\r\n");
      out.write("        조회버튼 -> /notice/noticeList.gd요청하자 -  오라클 서버를 경유함\r\n");
      out.write("        확장자가 .gd이면 오라클 서버를 경유하니까 조회결과를 쥐고 있다.\r\n");
      out.write("        쥔다 - request.setAttribute() - 화면 출력하기\r\n");
      out.write("         -->\r\n");
      out.write("          <a class=\"nav-link active\" href=\"/notice/noticeList.gd\">공지사항</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"/board/boardList.jsp\">게시판</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">회원관리</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">QnA게시판</a>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>");
      out.write("\r\n");
      out.write("	<!-- header end    -->\r\n");
      out.write("	<!-- body start    -->\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"page-header\">\r\n");
      out.write("			<h2>게시판 <small>게시글목록</small></h2>\r\n");
      out.write("			<hr />\r\n");
      out.write("		</div>\r\n");
      out.write("		<!-- 검색기 시작 -->\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-3\">\r\n");
      out.write("		    	<select id=\"gubun\" class=\"form-select\" aria-label=\"분류선택\">\r\n");
      out.write("		      		<option value=\"none\">분류선택</option>\r\n");
      out.write("		      		<option value=\"b_title\">제목</option>\r\n");
      out.write("		      		<option value=\"b_writer\">작성자</option>\r\n");
      out.write("		      		<option value=\"b_content\">내용</option>\r\n");
      out.write("		    	</select>			\r\n");
      out.write("		  	</div>\r\n");
      out.write("			<div class=\"col-6\">\r\n");
      out.write("		 		<input type=\"text\" id=\"keyword\" class=\"form-control\" placeholder=\"검색어를 입력하세요\" \r\n");
      out.write("		           aria-label=\"검색어를 입력하세요\" aria-describedby=\"btn_search\" onkeyup=\"searchEnter()\"/>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"col-3\">\r\n");
      out.write("		 		<button id=\"btn_search\" class=\"btn btn-danger\" onClick=\"boardSearch()\">검색</button>\r\n");
      out.write("		 	</div>\r\n");
      out.write("		</div>		\r\n");
      out.write("		<!-- 검색기 끝 -->\r\n");
      out.write("		\r\n");
      out.write("		<!-- 회원목록 시작 -->\r\n");
      out.write("		<div class='board-list'>\r\n");
      out.write("			<table class=\"table table-hover\">\r\n");
      out.write("		    	<thead>\r\n");
      out.write("		      		<tr>\r\n");
      out.write("		        		<th width=\"10%\">#</th>\r\n");
      out.write("		        		<th width=\"40%\">제목</th>\r\n");
      out.write("		        		<th width=\"20%\">첨부파일</th>\r\n");
      out.write("		        		<th width=\"15%\">작성자</th>\r\n");
      out.write("		        		<th width=\"15%\">조회수</th>\r\n");
      out.write("		      		</tr>\r\n");
      out.write("		    	</thead>\r\n");
      out.write("		    	<tbody>	    \r\n");
      out.write("					");

						//스크립틀릿 - 지변이다, 메소드 선언불가, 생성자 선언불가, 실행문
						//n건을 조회하는 경우이지만 resultType에는 map이나 vo패턴을 주는게 맞다
						//주의사항 - 자동으로 키값을 생성함 - 디폴트가 대문자이다
						//myBatis연동시 resultType=map{한행}으로 줌 -> selectList("noticeList", pMap)
						for(int i=0;i<size;i++){
							Map<String,Object> rmap = bList.get(i);
					
      out.write("					\r\n");
      out.write("										<tr>\r\n");
      out.write("											<td>");
      out.print(rmap.get("B_NO") );
      out.write("</td>\r\n");
      out.write("											<td>");
      out.print(rmap.get("B_TITLE") );
      out.write("</td>\r\n");
      out.write("											<td>");
      out.print(rmap.get("B_FILE") );
      out.write("</td>\r\n");
      out.write("											<td>");
      out.print(rmap.get("B_WRITER") );
      out.write("</td>\r\n");
      out.write("											<td>");
      out.print(rmap.get("B_HIT") );
      out.write("</td>\r\n");
      out.write("										</tr>					\r\n");
      out.write("					");

						}
					
      out.write("  		\r\n");
      out.write("		    	</tbody>\r\n");
      out.write("			</table> 	\r\n");
      out.write("<hr />  \r\n");
      out.write("<!-- [[ Bootstrap 페이징 처리  구간  ]] -->\r\n");
      out.write("	<div style=\"display:flex;justify-content:center;\">\r\n");
      out.write("	<ul class=\"pagination\">\r\n");
      out.write("	</ul>\r\n");
      out.write("	</div>\r\n");
      out.write("<!-- [[ Bootstrap 페이징 처리  구간  ]] -->		  \r\n");
      out.write("		  	<div class='board-footer'>\r\n");
      out.write("		    	<button class=\"btn btn-warning\" onclick=\"boardList()\">\r\n");
      out.write("		      		전체조회\r\n");
      out.write("		    	</button>&nbsp; \r\n");
      out.write("			    <button type=\"button\" class=\"btn btn-success\" data-bs-toggle=\"modal\" data-bs-target=\"#boardForm\">\r\n");
      out.write("			    글쓰기\r\n");
      out.write("			    </button>\r\n");
      out.write("		    </div>\r\n");
      out.write("		</div>		\r\n");
      out.write("		<!-- 회원목록   끝  -->		\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("	<!-- body end       -->\r\n");
      out.write("	<!-- footer start -->\r\n");
      out.write("	");
      out.write("\r\n");
      out.write(" <div class=\"navbar navbar-expand-sm bg-dark justify-content-center\">\r\n");
      out.write("    <a class=\"navbar-brand\"  style=\"color:white\"  href=\"#\">여기내GYM Copyright &copy; 2023</a>\r\n");
      out.write(" </div>");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("		<!-- ========================== [[ 게시판 Modal ]] ========================== -->\r\n");
      out.write("	<div class=\"modal\" id=\"boardForm\">\r\n");
      out.write("	  <div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("	    <div class=\"modal-content\">\r\n");
      out.write("	\r\n");
      out.write("	      <!-- Modal Header -->\r\n");
      out.write("	      <div class=\"modal-header\">\r\n");
      out.write("	        <h4 class=\"modal-title\">게시판</h4>\r\n");
      out.write("	        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("	      </div>\r\n");
      out.write("	      <!-- Modal body -->\r\n");
      out.write("	      <div class=\"modal-body\">\r\n");
      out.write("	      	<!-- <form id=\"f_board\" method=\"get\" action=\"./boardInsert.pj2\"> -->\r\n");
      out.write("	      	<form id=\"f_board\" method=\"post\" enctype=\"multipart/form-data\" action=\"./boardInsert.pj2\">\r\n");
      out.write("	      	  <input type=\"hidden\" name=\"method\" value=\"boardInsert\">\r\n");
      out.write("	          <div class=\"form-floating mb-3 mt-3\">\r\n");
      out.write("	            <input type=\"text\"  class=\"form-control\" id=\"b_title\" name=\"b_title\" placeholder=\"Enter 제목\" />\r\n");
      out.write("	            <label for=\"b_title\">제목</label>\r\n");
      out.write("	          </div>	      	\r\n");
      out.write("	          <div class=\"form-floating mb-3 mt-3\">\r\n");
      out.write("	            <input type=\"text\"  class=\"form-control\" id=\"b_writer\" name=\"b_writer\" placeholder=\"Enter 작성자\" />\r\n");
      out.write("	            <label for=\"b_writer\">작성자</label>\r\n");
      out.write("	          </div>	      	\r\n");
      out.write("	          <div class=\"form-floating mb-3 mt-3\">\r\n");
      out.write("	            <textarea rows=\"5\" class=\"form-control h-25\" aria-label=\"With textarea\" id=\"b_content\" name=\"b_content\"></textarea>\r\n");
      out.write("			  </div>	\r\n");
      out.write("		      <div class=\"input-group mb-3\">\r\n");
      out.write("				  <input type=\"file\" class=\"form-control\" id=\"b_file\" name=\"b_file\">\r\n");
      out.write("				  <label class=\"input-group-text\" for=\"b_file\">Upload</label>\r\n");
      out.write("			  </div>      	\r\n");
      out.write("	      	</form>\r\n");
      out.write("	      </div>	\r\n");
      out.write("	      <div class=\"modal-footer\">\r\n");
      out.write("	        <input type=\"button\" class=\"btn btn-warning\" data-bs-dismiss=\"modal\" onclick=\"boardInsert()\"  value=\"저장\">\r\n");
      out.write("	        <input type=\"button\" class=\"btn btn-danger\" data-bs-dismiss=\"modal\" value=\"닫기\">\r\n");
      out.write("	      </div>\r\n");
      out.write("	\r\n");
      out.write("	    </div>\r\n");
      out.write("	  </div>\r\n");
      out.write("	</div>\r\n");
      out.write("    <!-- ========================== [[ 게시판 Modal ]] ========================== -->\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
